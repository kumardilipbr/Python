NOTE: ITERABLE OBJECTS ARE STRINGS, DICTS, TUPLES, FILES, LISTS AND BUILTIN OBJECTS. NUMBERS ARE NOT ITERABLE OBJECTS

IT IS ONE OF THE MOST INTERSTING LOOPING CONCEPT, WHERE IT VALIDATES AGAINST EACH ENTITY

for char in 'python':
    print(char) #   HERE, IT IS READING EACH ENTRY AND PRINTS GOING TO NEXT ONE TILL END. O/P WILL HAVE PYTHON PROGRAMMING PRINTED ALPHABETICALLY LINE BY LINE

OUTPUT
p
y
t
h
o
n

HERE, IT PICKS EACH ENTITY IN THE VARIABLE AND OUTPUTS. EVEN IF WE HAVE A SPACE, IT CONSIDERS IT AS A CHARACTER AND PUTS IT IN INDIVIDUAL LINE
A TAB WILL BE CONSIDERED AS 3 SPACE, HENCE IT WILL HAVE 3 BLANK LINES

for num in '100':
    print(num)

OUTPUT
1
0
0

HERE, AS WE CAN SEE, IT CONSIDERS 100 AS STRING AND NOT AS NUMBER


for num in 100:
    print(num)

HERE, IT THROWS AN ERROR, BECAUSE, NOW NUM IS A NUMBER AND NUMBERS ARE NOT ITERABLE. 

for num in {'APPLE', 'BANANA'}:
    print(num)

OUTPUT
APPLE
BANANA

for num in [12,23,34]:
    print(num)

OUTPUT
12
23
34

for num in (12,23,34):
    print(num)
OUTPUT
12
23
34

for char in 'python':
    if char =='o':    # AS SOON AS THIS IS ENCOUNTERED, IT STOPS PRINTING. IF NOTHING MATCHES, IT PRINTS ALL
        break     # THIS BREAKS AS SOON AS THE ABOVE ONE IN CHAR IS MATCHED
    print(char)

OUTPUT
p
y
t
h

HERE, IT IS IMPORTANT TO NOTE THAT THE BREAK HAS 2 INDENTATION FROM BEGINNING AND PRINT STATEMENT HAS ONLY ONE INDENTATION.
IF WE DOUBLE INDENT PRINT TOO, THEN IT PRINTS NOTHING.


for num in range(25):
    if num%3==0:      # HERE, IT CHECKS FOR MOD3 =0 FOR RANGE 0 TO 100 AND PRINTS THEM IN SAME LINE.
        print(num,end=' ')

OUTPUT
0 3 6 9 12 15 18 21 24 


for num in range(6): #  THIS PRINTS ALL THE NUMEBRS STARTING FROM ZERO TILL THE VALUE GIVEN, BUT NOT THE NUMBER
    print(num)

OUTPUT
0
1
2
3
4
5


for num in range(7,15): #  THIS PRINTS BETWEEN RANGE 7 UPTO AND EXCLUDING 15
   print(num)

OUTPUT
7
8
9
10
11
12
13
14


for num in range(1,30,5): # THIS PRINTS 1 UPTO AND EXCLUDING 30, BUT WITH JUMP OF 5. SO, O/P WILL BE 1,6,11,16...
    print(num)

OUTPUT
1
6
11
16
21
26


for num in range(7,15):
    print(num,end=' ')      # HERE, END=’ ‘ IS REMOVING THE NEW LINE THE PRINT GENERATES BY DEFAULT AND PUTS ALL O/P IN SAME LINE


OUTPUT
7 8 9 10 11 12 13 14 


for num in range(7,15):
    print(num,end=' $ ') # HERE, END=’ $ ‘ IS REMOVING THE NEW LINE THE PRINT GENERATES BY DEFAULT AND PUTS ALL O/P IN SAME LINE SEPERATED BY " $ "

OUTPUT
7 $ 8 $ 9 $ 10 $ 11 $ 12 $ 13 $ 14 $ 


for num in range(7,15):
    print(num,end='$ ') # HERE, END=’$ ‘ IS REMOVING THE NEW LINE THE PRINTS AS IF WE ARE PUTTING THE AMOUNT IN DOLLARS
    
OUTPUT
7$ 8$ 9$ 10$ 11$ 12$ 13$ 14$ 



for n in range (0,10,1):
    print (' '*n +'#')
    
OUTPUT
#
 #
  #
   #
    #
     #
      #
       #
        #
         #
