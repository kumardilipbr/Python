TUPLES ARE CREATED USING ROUND BRACKETS ()
THEY ARE IMMUTABLE, WHICH MEANS, ONCE THEY ARE CREATED, THE VALUES CANNOT BE EDITED.
THE PURPOSE OF USING TUPLE IS TO NOT MAKE MODIFICATION IN THE VALUES UPON CHANGE IN ANY CONDITION
THEY ARE ORDERED LIKE LIST, BUT NOT LIKE DICTIONARY
THIS SUPPORTS SLICING, INDEXING, NOT LIKE DICTIONARY
EXAMPLE: GEO CO-ORDINATES, 

cost=(10,20,30)
print(cost)
print(type(cost))

==> (10, 20, 30)
<class 'tuple'>

cost=(10,20,30,40,50,60)
print(cost)
print(cost[1:4])
print(cost[1:])
print(cost[:3])
print(cost[-1])
print(cost[:])

==> (10, 20, 30, 40, 50, 60)
(20, 30, 40)
(20, 30, 40, 50, 60)
(10, 20, 30)
60
(10, 20, 30, 40, 50, 60)


TO PRINT EACH ELEMENT OF THE TUPLE

cost=(10,20,30,40,50,60)
for cst in cost:
    print(cst)


IN OPERATOR IN TUPLE
cost=(10,20,30,40,50,60)
x=20 in cost
print(x)

==> True

cost=(10,20,30,40,50,60)
x=20 and 30 in cost
print(x)

==> True

cost=(10,20,30,40,50,60)
x=20 and 35 in cost
print(x)

==> False

COUNTING THE NUMBER OF SIMILAR ELEMENTS IN A TUPLE

cost=(10,20,30,40,20,60)
print(cost.count(20))

==> 2

HERE, IT COUNTS THE NUMBER OF TIMES 20 EXISTS. AS IT OCCURS 2 TIMES, IT PRINTS 2

cost=(10,20,30,40,20,60)
print(cost.count(23))

==> 0

HERE, AS THE NUMBER 23 DOESNT EXIST, IT GIVES THE COUNT AS ZERO


DELETE IN A TUPLE

AS TUPLE IS IMMUTABLE, IT WILL NOT ALLOW TO DELETE ANYTHING. IF WE NEED TO DELETE, WE WILL HAVE TO DELETE THE ENTIRE VARIABLE

